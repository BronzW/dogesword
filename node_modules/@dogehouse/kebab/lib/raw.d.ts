import { User, UUID } from "./entities";
export declare type Token = string;
export declare type FetchID = UUID;
export declare type Opcode = string;
export declare type Logger = (direction: "in" | "out", opcode: Opcode, data?: unknown, fetchId?: FetchID, raw?: string) => void;
export declare type ListenerHandler = (data: unknown, fetchId?: FetchID) => void;
export declare type Listener = {
    opcode: Opcode;
    handler: ListenerHandler;
};
export declare type Connection = {
    addListener: (opcode: Opcode, handler: ListenerHandler) => () => void;
    user: User;
    send: (opcode: Opcode, data: unknown, fetchId?: FetchID) => void;
    fetch: (opcode: Opcode, data: unknown, doneOpcode?: Opcode) => Promise<unknown>;
};
export declare const connect: (token: Token, refreshToken: Token, { logger, onConnectionTaken, url, }: {
    logger?: Logger | undefined;
    onConnectionTaken?: (() => void) | undefined;
    url?: string | undefined;
}) => Promise<Connection>;
